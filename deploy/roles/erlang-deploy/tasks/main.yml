---
- name: Initialize the deploy root and gather facts
  deploy_helper:
    path: "{{ erlang_deploy_root }}"
    release: "{{ erlang_deploy_release_version }}"
    state: present

- name: Create the release directory
  file:
    path: "{{ deploy_helper.new_release_path }}"
    state: directory

- name: Add an unfinished file
  file:
    path: "{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}"
    state: touch

- name: Copy the release archive
  copy:
    src: "{{ erlang_deploy_archive_file }}"
    dest: '{{ erlang_deploy_root }}/{{ erlang_deploy_archive_name }}'
  when: erlang_deploy_copy_strategy == 'local'

- name: Copy the release archive
  get_url:
    url: "{{ erlang_deploy_archive_file }}"
    dest: '{{ erlang_deploy_root }}/{{ erlang_deploy_archive_name }}'
  when: erlang_deploy_copy_strategy == 'http'

- name: Copy the release archive
  s3:
    mode: get
    region: "{{ erlang_deploy_s3_region }}"
    bucket: "{{ erlang_deploy_s3_bucket }}"
    object: "{{ erlang_deploy_archive_file }}"
    dest: '{{ erlang_deploy_root }}/{{ erlang_deploy_archive_name }}'
  when: erlang_deploy_copy_strategy == 's3'

- name: Unpack the release archive
  unarchive:
    copy: false
    src: '{{ erlang_deploy_root }}/{{ erlang_deploy_archive_name }}'
    dest: "{{ deploy_helper.new_release_path }}"

- name: Remove the release archive
  file:
    path: '{{ erlang_deploy_root }}/{{ erlang_deploy_archive_name }}'
    state: absent

- name: Ensure shared sources are present
  file:
    path: "{{ deploy_helper.shared_path }}/{{ item.src }}"
    state: "{{ item.type | default('directory') }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items: "{{ erlang_deploy_shared_folders }}"

- name: Ensure shared paths are absent
  file:
    path: "{{ deploy_helper.new_release_path }}/{{ item.path }}"
    state: absent
  with_items: "{{ erlang_deploy_shared_folders }}"

- name: Create shared symlinks
  file:
    path: "{{ deploy_helper.new_release_path }}/{{ item.path }}"
    src: "{{ deploy_helper.shared_path }}/{{ item.src }}"
    state: link
  with_items: "{{ erlang_deploy_shared_folders }}"

- name: Stop the current release
  shell: bin/{{ erlang_deploy_name }} stop
  args:
    chdir: "{{ deploy_helper.previous_release_path }}"
  ignore_errors: true

- name: Finalize the deploy
  deploy_helper:
    path: "{{ erlang_deploy_root }}"
    release: "{{ deploy_helper.new_release }}"
    keep_releases: "{{ erlang_deploy_keep_releases }}"
    state: finalize

- name: Start the new release
  shell: bin/{{ erlang_deploy_name }} start
  args:
    chdir: "{{ deploy_helper.new_release_path }}"

- debug:
    msg: "Release {{ erlang_deploy_release_version }} deployed."
